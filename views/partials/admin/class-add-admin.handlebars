<br>
<h1>ADD CLASS</h1>
<form action="/insertclass" method="POST" role="form">
  <fieldset>
    <div class="form-row" style="margin-bottom: 14px;">
      <div class="col">
        <label>Batch</label>
        <input class="form-control" id="batch" name="batch" type="number" placeholder="Batch" required>
      </div>
      <div class="col">
        <label>Section</label>
        <input class="form-control" id="section" name="section" type="number" placeholder="Section" required>
      </div>
    </div>
    <div class="form-row" style="margin-bottom: 14px;">
      <div class="col">
        <label>Adviser</label>
          <select  name="adviser" class="form-control" id="adviser" required>
         {{#each faculty}}
          <option value ="{{this.id}}">{{this.first_name}} {{this.last_name}}</option>
          {{/each}}
          </select>
      </div>
    </div>
    <br>
    <div class="row">
      <a class="btn btn-dark col-md-6 back" href="/admin/class">BACK</a>
    <input class="btn btn-dark col-md-6" type="submit" value="ADD CLASS"></input>
  </div>
  </fieldset>
</form> 



{{!--           <label>Category</label>
          <select  name="category" class="form-control" id="category" required>
         {{#each rows.[1]}}
          <option value ="{{this.id}}">{{this.name}}</option>
          {{/each}}
          </select>


          <label>Brand</label>
          <select name="brand" class="form-control" id="brand" required>
        {{#each rows.[0]}}
          <option value ="{{this.id}}">{{this.name}}</option>
          {{/each}}
          </select> --}}



{{!--     app.get('/admin/products', checkAdmin, function (req, res, next) {
  Category.list(client, {}, function (categories) {
    Brand.list(client, {}, function (brands) {
      Product.list(client, {limit: 10}, {offset: (req.query.p - 1) * 10}, {
      }, function (products) {
        res.render('partials/admin/products-admin', {
          products: products,
          layout: 'admin',
          brands: brands,
          title: 'Products',
          categories: categories,
          pagination: {
            page: req.query.p || 1,
            limit: 10,
            n: req.query.p || 1
          }
        });
      });
    });
  });
}); --}}